public short getVcenter() {return field_1_vcenter;}
public void addAll(BlockList<T> src) {
public void writeBytes(byte[] b, int offset, int length) {
public void setObjectId(ObjectId objectId) {this.objectId = objectId;}
public DeleteDomainEntryResult deleteDomainEntry(String domainName, String domainEntry) {
public long getTermOffsetsSize() {return termOffsets.ramBytesUsed();}
public final String getFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0);if (msgB < 0) {return ""; }return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.length);}
public POIFSFileSystem(boolean bigBlockSize) {
public void init(int address, int length) {slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];assert slice!= null;upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;assert upto + length <= slice.length;}
public SubmoduleAddCommand setPath(String path) {this.path = path;return this;}
public ListIngestionsResult listIngestions(ListIngestionsRequest request) {
public QueryParserTokenManager(CharStream stream){
public GetShardIteratorResult getShardIterator(String streamName, String shardId, String shardIteratorType) {
public ModifyStrategyRequest(String id, String name, String description) {super("aegis", "2016-11-11", "ModifyStrategy", "vipaegis");setMethod(MethodType.POST);setId(id);setName(name);setDescription(description);}
public void close() throws IOException {synchronized (lock) {if (in!= null) {in.close();}}
public EscherClientDataRecord getClientDataRecord() {return _clientDataRecord;}
public synchronized int read(char[] buffer, int offset, int length) {if (buffer == null) {throw new NullPointerException("buffer == null");}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (length == 0) {return 0;}int copylen = count - pos < length? count - pos : length;for (int i = 0; i < copylen; i++) {buffer[offset + i] = (char) this.buffer.charAt(pos + i);}pos += copylen;return copylen;}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp, String language) {this.sentenceOp = sentenceOp; this.language = language;}
public void print(String str, int n) {write(str!= null? str : String.valueOf((Object) null));}
public NotImplementedFunctionException(String functionName, NotImplementedException cause) {super(functionName, cause);this.functionName = functionName;}
public V next() {return super.nextEntry().getValue();}
public final void readBytes(byte[] b, int offset, int len) throws IOException {readBytes(b, offset, len, true);}
{
public void remove(int index) {throw new UnsupportedOperationException();}
public CacheSubnetGroup modifyCacheSubnetGroup(String cacheSubnetGroupName, String subnetIds) {
public void setParams(String params) {super.setParams(params);language = country = variant = "";StringTokenizer st = new StringTokenizer(params, ",");if (st.hasMoreTokens())language = st.nextToken();if (st.hasMoreTokens())country = st.nextToken();if (st.hasMoreTokens())variant = st.nextToken();}
public DeleteDocumentationVersionResult deleteDocumentationVersion(DeleteDocumentationVersionRequest deleteDocumentationVersionRequest) {
public boolean equals(FacetLabel other) {
{
public HSSFPolygon createPolygon(HSSFChildAnchor anchor, HSSFShape parent) {HSSFPolygon shape = new HSSFPolygon(this, anchor, parent);shape.setParent(parent);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}
public int getSheetIndex(String sheetName) {return getBoundSheetRec(sheetName).getSheetIndex();}
public GetDashboardResult getDashboard(GetDashboardRequest request) {
public AssociateSigninDelegateGroupsWithAccountResult associateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {
public void addMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn(( short ) (j + mbr.getFirstColumn()));br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}
public static String quote(String string) {StringBuilder sb = new StringBuilder();int apos = 0;int k;while ((k = string.indexOf("\\", apos)) >= 0) {sb.append(string.substring(apos, k)).append("\\").append("\\Q");apos = k + 1;}return sb.append(string.substring(apos)).append("\\").toString();}
public ByteBuffer putInt(int index, int value) {throw new ReadOnlyBufferException();}
public int getValueIndex(int col, int row) {return ((col * _nRows) + row);}
public GetIceServerConfigResult getIceServerConfig(GetIceServerConfigRequest request) {
public String toString() {return getClass().getName() + " [" +getValueAsString() +"]";}
public String toString() {return "ToChildBlockJoinQuery ("+parentQuery.toString()+")";}
public final void decRef() {refCount.decrementAndGet();}
public UpdateConfigurationSetSendingEnabledResult updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {
public int getNextXBATChainOffset(int block) {return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.getInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp._divisor, tp._divisorShift);} else {mulShift(tp._multiplicand, tp._multiplierShift);}}
public String toString(){return new String(toCharArray());}
public InstanceProfileCredentialsProvider withFetcher(ECSMetadataServiceCredentialsFetcher fetcher, String roleName) {this.fetcher = fetcher;this.fetcher.setRoleName(roleName);return this;}
public void setProgressMonitor(ProgressMonitor pm) {progressMonitor = pm;}
public void reset() {if (!first()) {ptr = 0;if (!eof())parseEntry();}}
public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new NoSuchElementException();}
public String getNewSuffix() {return this.newSuffix;}
public int indexOfValue(int value) {
public List<CharsRef> uniqueStems(char[] word, int length) {List<CharsRef> stems = stem(word, length);if (stems.size() < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);List<CharsRef> deduped = new ArrayList<>();for (CharsRef s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}
public GetGatewayResponsesResult getGatewayResponses(GetGatewayResponsesRequest request) {
public void setPosition(long pos) {currentBlockIndex = (int) (pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int) (pos & blockMask);}
public long skip(long n) {int s = (int) Math.min(available(), Math.max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig, String id) {setBootstrapActionConfig(bootstrapActionConfig); setId(id);}
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_row);out.writeShort(field_2_col);out.writeShort(field_3_flags);out.writeShort(field_4_shapeid);out.writeShort(field_6_author.length());out.writeByte(field_5_hasMultibyte? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.putUnicodeLE(field_6_author, out);} else {StringUtil.putCompressedUnicode(field_6_author, out);}if (field_7_padding!= null) {out.writeByte(field_7_padding.intValue());}}
public int lastIndexOf(String string, int count) {
public boolean add(E object, int index) {return addImpl(object, index);}
public void unsetSection(String section, String subsection) {ConfigSnapshot src, res;do {src = state.get();res = unsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}
public final String getTagName() {return tagName;}
public void addSubRecord(SubRecord element) {subrecords.add(element);}
public boolean removeAll(Collection<?> c) {synchronized (mutex) {return delegate().removeAll(c);}}
public DoubleMetaphoneFilter create(TokenStream input, int maxCodeLength, boolean inject) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long length() {return inCoreLength();}
public void setValue(boolean newValue) {value = newValue;}
public ContentSource getOldSource() {return oldSource;}
public int get(int i) {
public CreateRepoRequest(String name, String description, String homepage, String private_repository, String git_url, String ssh_url, String svn_url, String html_url, String avatar_url, String default_branch, String license, String license_url, String created_at, String updated_at, String pushed_at, String homepage_url, String description_url, String default_branch_url, String default_branch_name, String default_branch_target_url, String default_branch_target_name, String default_branch_target_commit_id, String default_branch_target_sha, String default_branch_target_type, String default_branch_target_url_type, String default_branch_target_branch_name, String default_branch_target_branch_target_url, String default_branch_target_branch_target_url_type, String default_branch_target_branch_target_name, String default_branch_target_branch_target_branch_target_url, String default_branch_target_branch_target_branch_target_url_type, String default_branch_target_branch_target_branch_target_name, String default_branch_target_branch_target_branch_target_branch_target_url, String default_branch_target_branch_target_branch_target_branch_target_url_type, String default_branch_target_branch_target_branch_target_branch_target_name, String default_branch_target_branch_target_branch_target_branch_target_branch_target_url, String default_br
public boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}
public void remove(int index) {if (expectedModCount == list.modCount) {if (index < 0 || index >= list.size) {throw new IndexOutOfBoundsException();}if (lastLink!= null) {Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (index == pos) {pos--;link = previous;lastLink = null;expectedModCount++;list.size--;list.modCount++;} else if (index < pos) {link = link.next;pos--;expectedModCount++;}} else {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}}
public void mergeShards(MergeShardsRequest request) {request = beforeClientExecution(request);}
public void allocateHostedConnection(AllocateHostedConnectionRequest request) {executeAllocateHostedConnection(request);}
public int getEndIndex() {return end;}
public static final WeightedTerm[] getTerms(Query query, boolean useStopWords){
public ByteBuffer compact(int start) {throw new ReadOnlyBufferException();}
//  public static long[] Decode(byte[] blocks, int blocksOffset, int iterations)
public String getHumanishName() throws IllegalArgumentException {String s = getPath();if ("/".equals(s) || "".equals(s)) s = getHost();if (s == null) throw new IllegalArgumentException();String[] elements;if ("file".equals(scheme) || LOCAL_FILE.matcher(s).matches()) elements = s.split("[\\" + File.separatorChar + "/]"); elseelements = s.split("/+"); if (elements.length == 0)throw new IllegalArgumentException();String result = elements[elements.length - 1];if (Constants.DOT_GIT.equals(result))result = elements[elements.length - 2];else if (result.endsWith(Constants.DOT_GIT_EXT))result = result.substring(0, result.length()- Constants.DOT_GIT_EXT.length());return result;}
public DescribeNotebookInstanceLifecycleConfigResult executeDescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest describeNotebookInstanceLifecycleConfigRequest) {
public String getAccessKeySecret() {return this.accessKeySecret;}
public CreateVpnConnectionResult createVpnConnection(CreateVpnConnectionRequest request) {
public DescribeVoicesResult executeDescribeVoices(DescribeVoicesRequest describeVoicesRequest) {
{
public DescribeJobRequest(String vaultName, String jobId, String startDate, String endDate) {setVaultName(vaultName);setJobId(jobId);setStartDate(startDate);setEndDate(endDate);}
public int getEscherRecordCount(){return escherRecords.size();}
{
public DeleteSmsChannelResult deleteSmsChannel(String smsApplicationId) {
public TrackingRefUpdate getTrackingRefUpdate(String trackingRefUpdate) {return trackingRefUpdate == null? null : new TrackingRefUpdate(trackingRefUpdate);}
public void print(char c) {print(String.valueOf(c));}
public QueryNode getChild() {return getChildren().get(0);}
public int getIndex() {return index;}
//	public FormatFlags getFormatFlags() {
public GetThumbnailRequest(String email, String id, String photo_id) {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto");setProtocol(ProtocolType.HTTPS);setEmail(email);setId(id);setPhoto_id(photo_id);}
public DescribeTransitGatewayVpcAttachmentsResult executeDescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest describeTransitGatewayVpcAttachmentsRequest) {
public PutVoiceConnectorStreamingConfigurationResult putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request, ServiceCallback<PutVoiceConnectorStreamingConfigurationResult> serviceCallback) {
