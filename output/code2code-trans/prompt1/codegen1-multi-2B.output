public int getNumberOfRecords()
public void addAll(BlockList<T> src, int srcDirIdx, int srcBlkIdx) {if (srcBlkIdx == 0)return;int srcDirIdx2 = srcDirIdx + 1;for (; srcDirIdx2 < src.tailDirIdx; srcDirIdx2++)addAll(src.directory[srcDirIdx2], srcDirIdx, srcBlkIdx);if (src.tailBlkIdx!= 0)addAll(src.tailBlock, srcDirIdx, srcBlkIdx);}
public void writeChar(char c) {if (upto == blockSize) {if (currentBlock!= null) {addBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = (byte)(c >>> 8);currentBlock[upto++] = (byte)(c);}
public void setObjectId(ObjectId objectId) {this.objectId = objectId;}

public long ramBytesUsed() {return ((termOffsets!=null)? termOffsets.ramBytesUsed() : 0) +((termsDictOffsets!=null)? termsDictOffsets.ramBytesUsed() : 0);}
public final String getFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0);if (msgB < 0) {return ""; }return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.length);}
public POIFSFileSystem(boolean create) {
public void next() {
public SubmoduleAddCommand setPath(Path path) {this.path = path;return this;}

public QueryParserTokenManager(CharStream stream){
}//CodeClient
public ModifyStrategyRequest(String requestBody) throws IOException {
public boolean ready() throws IOException {synchronized (lock) {if (in == null) {throw new IOException("InputStreamReader is closed");}try {return bytes.hasRemaining() || in.available() > 0;} catch (IOException e) {return false;}}}
public void setOptRecord(EscherOptRecord optRecord) {_optRecord = optRecord;}
public synchronized int read(char[] buffer, int offset, int length) {if (buffer == null) {throw new NullPointerException("buffer == null");}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (length == 0) {return 0;}int copylen = count - pos < length? count - pos : length;for (int i = 0; i < copylen; i++) {buffer[offset + i] = this.buffer.charAt(pos + i);}pos += copylen;return copylen;}
public void setSentenceDetector(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void print(int i) {write(String.valueOf(i));}
public NotImplementedFunctionException(String functionName, NotImplementedException cause, String message) {super(functionName, cause, message);this.functionName = functionName;}
public V next() {return super.nextEntry().getValue();}
public final void readBytes(byte[] b) throws IOException {readBytes(b, 0, b.length);}
}//CodeClient
public void remove(int index) {throw new UnsupportedOperationException();}
}//CacheSubnetGroupClient
public void setParams(String params, String language, String country, String variant) {super.setParams(params);this.language = language;this.country = country;this.variant = variant;}
public DeleteDocumentationVersionResult executeDeleteDocumentationVersion(DeleteDocumentationVersionRequest request) {
public FacetLabel(String... components) {this.components = components; this.length = components.length; }
// GetInstanceAccessDetailsResult.java
public HSSFChildAnchor createAnchor() {return new HSSFChildAnchor(this);}
public int getSheetIndex(String sheetName) {return getBoundSheetRec(sheetName).getSheetIndex();}
public GetDashboardResult executeGetDashboard(GetDashboardRequest request) {
public AssociateSigninDelegateGroupsWithAccountResult executeAssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {
public void addMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn(( short ) (j + mbr.getFirstColumn()));br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}
public static String quote(String string) {StringBuilder sb = new StringBuilder();sb.append("\\Q");int apos = 0;int k;while ((k = string.indexOf("\\E", apos)) >= 0) {sb.append(string.substring(apos, k + 2)).append("\\\\E\\Q");apos = k + 2;}return sb.append(string.substring(apos)).append("\\E").toString();}
public ByteBuffer putInt(int index, int value) {throw new ReadOnlyBufferException();}
public ArrayPtg(Object[][] values2d, int nColumns, int nRows) {_nColumns = (short) nColumns;_nRows = (short) nRows;_arrayValues = values2d;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}

public String getValueAsString() {return value;}
public String toString() {return "ToChildBlockJoinQuery ("+parentQuery.toString()+")";}
public final void decRef() {
}//ConfigurationService
public int getNextXBATChainOffset() {return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.getInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp._divisor, tp._divisorShift);} else {mulShift(tp._multiplicand, tp._multiplierShift);}}
public String toString(){final StringBuilder b = new StringBuilder();final int          l = length();b.append(File.separatorChar);for (int i = 0; i < l; i++){b.append(getComponent(i));if (i < l - 1){b.append(File.separatorChar);}}return b.toString();}
public InstanceProfileCredentialsProvider withRoleName(String roleName) {this.roleName = roleName;return this;}
public void setProgressMonitor(ProgressMonitor pm, int max) {progressMonitor = pm;}
public void reset(String file) {if (!first()) {ptr = 0;if (!eof())parseEntry(file);}}
public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new NoSuchElementException();}
public String getNewSuffix() {return this.newSuffix;}
public int indexOfValue(int value) {for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;}
public List<CharsRef> uniqueStems(char word[], int length) {List<CharsRef> stems = stem(word, length);if (stems.size() < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);List<CharsRef> deduped = new ArrayList<>();for (CharsRef s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}
public GetGatewayResponsesResult executeGetGatewayResponses(GetGatewayResponsesRequest request) {
public void setPosition(long pos, int blockIndex) {currentBlockIndex = blockIndex;currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int) (pos & blockMask);}
public long available() {return buf.length - ptr;}
public BootstrapActionConfig getBootstrapActionConfig() {
// code.java.template
public int lastIndexOf(String string, int count) {
public boolean add(E object) {return addFirstImpl(object);}
public void unsetSection(ConfigSnapshot src, String section, String subsection) {
public final String getTagName(String ns) {return ns+tagName;}
public void addSubRecord(SubRecord element) {subrecords.add(element);}
public boolean removeAll(Collection<?> c) {synchronized (mutex) {return delegate().removeAll(c);}}
public DoubleMetaphoneFilter create(TokenStream input, int maxCodeLength, boolean inject) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long inCoreLength() {
public void setValue(char newValue) {value = newValue;}
public ContentSource getOldSource() {return oldSource;}
public void set(int i, int val) {if (count <= i)throw new ArrayIndexOutOfBoundsException(i);entries[i] = val;}
public CreateRepoRequest(String name) {super("cr", "2016-06-07", "CreateRepo", "cr");setUriPattern("/repos");setMethod(MethodType.PUT);setName(name);}
public boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}
public void add(ET e) {if (expectedModCount == list.modCount) {if (lastLink!= null) {Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (lastLink == link) {pos--;}link = previous;lastLink = null;expectedModCount++;list.size++;list.modCount++;} else {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}}
// code.java

public int getEndIndex() {return end;}
public static final WeightedTerm[] getTerms(Query query,boolean sort){
public ByteBuffer compact(int start, int end) {throw new ReadOnlyBufferException();}

public String getPath() throws IllegalArgumentException {String s = getHost();if (s == null) throw new IllegalArgumentException();return s;}
public DescribeNotebookInstanceLifecycleConfigResult executeDescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {
public String getAccessKeyID() {return this.accessKeyID;}
// CreateVpnGatewayResult.java


public DescribeJobRequest(String vaultName, String jobId, String vaultName2, String jobId2) {setVaultName(vaultName);setJobId(jobId);setVaultName2(vaultName2);setJobId2(jobId2);}
public EscherRecord getEscherRecord(int index){return escherRecords.get(index);}
public GetApisResult executeGetApis(GetApisRequest request) {

public void setTrackingRefUpdate(TrackingRefUpdate trackingRefUpdate) {this.trackingRefUpdate = trackingRefUpdate;}
public void print(char c) {print(String.valueOf(c));}
public void setChild(QueryNode child) {getChildren().set(0, child);}
public void filter(File file) {
public AreaRecord() {
public GetThumbnailRequest(String photoId) {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto");setPhotoId(photoId);}
public DescribeTransitGatewayVpcAttachmentsResult executeDescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {

