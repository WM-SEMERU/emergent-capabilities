public void deserialize(ByteBuffer in) {field_1_vcenter = in.readShort();}
public void addAll(BlockList<T> src, int start, int end) {if (src.size == 0)return;int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++)addAll(src.directory[srcDirIdx], start, end);if (src.tailBlkIdx!= 0)addAll(src.tailBlock, start, end);}
public void writeShort(short s) {if (upto == blockSize) {if (currentBlock!= null) {addBlock(currentBlock);}currentBlock = new short[blockSize];upto = 0;}currentBlock[upto++] = s;}
public void setObjectId(ObjectId objectId) {this.objectId = objectId;}
// code.java
public long getTermOffsets() {return termOffsets;}
public final String getFullMessage(int msgB) {byte[] raw = buffer;int msgB2 = RawParseUtils.tagMessage(raw, msgB);if (msgB2 < 0) {return ""; }return RawParseUtils.decode(guessEncoding(), raw, msgB2, raw.length);}
public POIFSFileSystem(boolean b) {this(b, true);_header.setBATCount(1);_header.setBATArray(new int[]{1});BATBlock bb = BATBlock.createEmptyBATBlock(bigBlockSize, false);bb.setOurBlockIndex(1);_bat_blocks.add(bb);setNextBlock(0, POIFSConstants.END_OF_CHAIN);setNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK);_property_table.setStartBlock(0);}
public void init(int address, int length) {slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];assert slice!= null;upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;assert upto < slice.length;}
public SubmoduleAddCommand(String path) {this.path = path;return this;}
// code.java
public static final String[] lexStateNames = {
// code.java
public ModifyStrategyRequest(String aegis, String date, String method, String value) {super(aegis, date, method, value);setMethod(MethodType.POST);}
public int read() throws IOException {synchronized (lock) {if (in == null) {throw new IOException("InputStreamReader is closed");}try {return in.read();} catch (IOException e) {return -1;}}}
public void setOptRecord(EscherOptRecord optRecord) {
public synchronized int read() {if (pos >= count) {throw new EOFException();}return (byte) this.buffer.charAt(pos++);}
public void setSentenceDetectorOp(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}
public void print(String str, int i) {write(str!= null? str : String.valueOf((Object) null));}
public NotImplementedException getCause() {return this.cause;}
public void remove() {throw new UnsupportedOperationException();}
public final void readBytes(byte[] b, int offset, int len) throws IOException {int available = bufferLength - bufferPosition;if(len <= available){if(len>0) System.arraycopy(buffer, bufferPosition, b, offset, len);bufferPosition+=len;} else {if(available > 0){System.arraycopy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len<bufferSize){refill();if(bufferLength<len){System.arraycopy(buffer, 0, b, offset, bufferLength);throw new EOFException("read past EOF: " + this);} else {System.arraycopy(buffer, 0, b, offset, len);bufferPosition=len;}} else {long after = bufferStart+bufferPosition+len;if(after > length())throw new EOFException("read past EOF: " + this);readInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;                    }}}
//package com.hazelcast.client.impl.protocol.codec;
public static void main(String[] args) {
//package com.cloud.api;
public String getLanguage() {return language;}
// code.java
public int hashCode() {if (length!= 0) {return components[length - 1].hashCode();}return 0;}
// code.java
public HSSFPolygon createPolygon(HSSFChildAnchor anchor, HSSFChildAnchor anchor2) {HSSFPolygon shape = new HSSFPolygon(this, anchor, anchor2);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}
public String getSheetName(int sheetIndex, int sheetIndex2) {return getBoundSheetRec(sheetIndex).getSheetname();}
// code.java
// code.java
public void addMultipleBlanks(MulBlankRecord mbr, int row, int col) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn(( short ) (j + mbr.getFirstColumn()));br.setRow(row);br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}
public static String quote(String string) {StringBuilder sb = new StringBuilder();sb.append("\\Q");int apos = 0;int k;while ((k = string.indexOf("\\E", apos)) >= 0) {sb.append(string.substring(apos, k + 2)).append("\\\\E\\Q");apos = k + 2;}return sb.append(string.substring(apos)).append("\\E").toString();}
public ByteBuffer putInt(int value, int position) {throw new ReadOnlyBufferException();}
public short getReserved0Int() {return _reserved0Int;}
// @Override
public String getValueAsString() {return value;}
public String toString() {return "ToChildBlockJoinQuery ("+parentQuery.toString()+")";}
public final void decRef() {refCount.decrementAndGet();}
// * @param request
public int getXBATEntriesPerBlock() {return LittleEndianConsts.INT_SIZE;}
public void multiplyByPowerOfTen(int pow10, int divisor) {
public String toString(){final StringBuilder b = new StringBuilder();final int          l = length();b.append(File.separatorChar);for (int i = 0; i < l; i++){b.append(getComponent(i));if (i < l - 1){b.append(File.separatorChar);}}return b.toString();}
public InstanceProfileCredentialsProvider withFetcher(ECSMetadataServiceCredentialsFetcher fetcher, String roleName) {this.fetcher = fetcher;this.fetcher.setRoleName(roleName);return this;}
public void setProgressMonitor(ProgressMonitor pm, int max) {
public boolean first() {return ptr == 0;}
public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new NoSuchElementException();}
public void setNewPrefix(String newPrefix) {this.newPrefix = newPrefix;}
public int indexOfValue(int value, int start) {for (int i = start; i < mSize; i++)if (mValues[i] == value)return i;}
public List<CharsRef> uniqueStems(char word[], int length, boolean ignoreCase) {List<CharsRef> stems = stem(word, length, ignoreCase);if (stems.size() < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);List<CharsRef> deduped = new ArrayList<>();for (CharsRef s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}
// code.java
public void setPosition(int pos) {currentBlockIndex = (int) (pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int) (pos & blockMask);}
public long skip(long n) {int s = (int) Math.min(available(), Math.max(0, n));ptr += s;return s;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig, BootstrapActionDetail bootstrapActionDetail) {setBootstrapActionConfig(bootstrapActionConfig);setBootstrapActionDetail(bootstrapActionDetail);}
public void deserialize(LittleEndianInput in) {field_1_row = in.readShort();field_2_col = in.readShort();field_3_flags = in.readShort();field_4_shapeid = in.readShort();field_6_author.length();field_5_hasMultibyte = in.readByte()==0x01;if (field_5_hasMultibyte) {field_6_author = StringUtil.getUnicodeLE(in);} else {field_6_author = StringUtil.getCompressedUnicode(in);}if (field_7_padding!= null) {field_7_padding.intValue();} }
public int lastIndexOf(String string, int count) {
public boolean addLast(E object) {return addLastImpl(object);}
public ConfigSnapshot unsetSection(ConfigSnapshot src, String section, String subsection) {
public final String getTagName() {return tagName;}
public void addSubRecord(int index, SubRecord element, int subindex) {subrecords.add(index, element);}
public boolean removeAll(Collection c) {synchronized (mutex) {return delegate().removeAll(c);}}
// public DoubleMetaphoneFilter create(TokenStream input, int maxCodeLength, boolean inject) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long inCoreLength() {return inCoreLength;}
public boolean getValue() {return value;}
public static void main(String[] args) {
public int get(int i, int j) {if (count <= i)throw new ArrayIndexOutOfBoundsException(i);return entries[i];}
public CreateRepoRequest(String uri, String name, String description, String homepage, String homepageUrl, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos, String homepageUrlTos
public boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}
public boolean add(ET e) {if (expectedModCount == list.modCount) {if (lastLink!= null) {Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (lastLink == link) {pos++;;}link = previous;lastLink = null;expectedModCount++;list.size++;list.modCount++;}} else {throw new ConcurrentModificationException();}}
// @Override
// * @param request
public int getEndIndex() {return end;}
public static final WeightedTerm[] getTerms(Query query, boolean includeInferred){return getTerms(query,includeInferred,false);}
public ByteBuffer duplicate() {throw new ReadOnlyBufferException();}
public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >>> 2;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >>> 6);values[valuesOffset++] = byte2 & 63;}}
public String getPath() throws IllegalArgumentException {String s = getScheme();if (s == null) throw new IllegalArgumentException();return s;}
// code.java
public String getAccessKeySecret() {return this.accessKeySecret;}
// * @param request
// --------------------------------------------------------------------------------------------------------
// code.java
public DescribeJobRequest() {
public void setEscherRecord(int index, EscherRecord escherRecord){escherRecords.set(index, escherRecord);}
//package com.example.android.apis;
// file: code.java
public void setTrackingRefUpdate(TrackingRefUpdate trackingRefUpdate) {
public void print(char c) {print(String.valueOf(c));}
public void setChild(QueryNode child) {
public NotIgnoredFilter(int workdirTreeIndex, int workdirIndex) {this.index = workdirTreeIndex;this.workdirIndex = workdirIndex;}
public static final short field_1_formatFlags = (short)0x0000;
public GetThumbnailRequest(String photoId, String thumbnailId) {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto");setPhotoId(photoId);setThumbnailId(thumbnailId);setProtocol(ProtocolType.HTTPS);}
// --------------------------------------------------------------------------------------------------------
// code.java
public OrdRange getOrdRange(String dim, String val) {return prefixToOrdRange.get(dim, val);}
public String toString() {String symbol = "";if (startIndex >= 0 && startIndex < getInputStream().size()) {symbol = getInputStream().getText(Interval.of(startIndex,startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return String.format(Locale.getDefault(), "%s('%s')", LexerNoViableAltException.class.getSimpleName(), symbol);}
public E peekFirst() {return peekFirstImpl();}
// file: code.java
public NumberFormatIndexRecord copy() {
