public void serialize(LittleEndianOutput out) {out.writeShort(field_1_vcenter);}
tailBlkIdx!= 0)addAll(src.tailBlock, srcDirIdx, srcBlkIdx);}
0;}
public void setObjectId(ObjectId objectId) {this.objectId = objectId;}
public static DeleteDomainEntryResult executeDeleteDomainEntry(DeleteDomainEntryRequest request) {
public void setTermOffsets(int termCount, long[] termOffsets) {
decode(guessEncoding(), raw, msgB, raw.length);}
public POIFSFileSystem(boolean create) {this(create, true);}
assert upto < slice.length;}
public SubmoduleAddCommand setPath(Path path) {this.path = path;return this;}
public ListIngestionsResult executeListIngestions(ListIngestionsRequest listIngestionsRequest) {
public QueryParserTokenManager(CharStream stream){
public static GetShardIteratorResult executeGetShardIterator(GetShardIteratorRequest getShardIteratorRequest) {
}
;} catch (IOException e) {return false;}}}
public void setOptRecord(EscherOptRecord optRecord) {_optRecord = optRecord;}
= (char) this.buffer.charAt(pos + i);}pos += copylen;return copylen;}
public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp, String language) {this.sentenceOp = sentenceOp;}
public void print(Object obj) {write(obj!= null? obj.toString() : String.valueOf((Object) null));}
public NotImplementedFunctionException(String functionName, NotImplementedException cause, String message) {super(functionName, cause, message);this.functionName = functionName;}
public V next() {return super.nextEntry().getValue();}
public final void readBytes(byte[] b) throws IOException {readBytes(b, 0, b.length);}
public TagQueueResult tagQueue(TagQueueRequest request, AsyncHandler<TagQueueRequest, TagQueueResult> asyncHandler) {request = beforeClientExecution(request);
public void remove(int index) {throw new UnsupportedOperationException();}
public void executeModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {
public void setParams(String language, String country, String variant) {super.setParams(language, country, variant);this.language = language;this.country = country;this.variant = variant;}
public static DeleteDocumentationVersionResult executeDeleteDocumentationVersion(DeleteDocumentationVersionRequest request) {
public int hashCode() {int hash = 0; for (int i = length - 1; i >= 0; i--) {hash = hash * 31 + components[i].hashCode();}}
public static GetInstanceAccessDetailsResult executeGetInstanceAccessDetails(GetInstanceAccessDetailsRequest request) {
new HSSFChildAnchor(this));shapes.add(anchor);onCreate(anchor);return anchor;}
public int getSheetIndex(String sheetName) {return getBoundSheetRec(sheetName).getSheetIndex();}
public GetDashboardResult executeGetDashboard(GetDashboardRequest request) {
public static AssociateSigninDelegateGroupsWithAccountResult executeAssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {
short ) (j + mbr.getFirstColumn()));br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}
(quote).toString();}
public ByteBuffer putInt(int index, int value) {throw new ReadOnlyBufferException();}
// code.java version of code.cs
public GetIceServerConfigResult executeGetIceServerConfig(GetIceServerConfigRequest getIceServerConfigRequest) {
public String getValueAsString() {return value;}
public String toString() {return "ToChildBlockJoinQuery ("+parentQuery.toString()+")";}
public final void decRef() {
public UpdateConfigurationSetSendingEnabledResult executeUpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest updateConfigurationSetSendingEnabledRequest) {
public int getNextXBATChainOffset() {return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}
._divisor, tp._divisorShift, result);} else {mulShift(tp._multiplicand, tp._multiplierShift, result);}}
Component(i));if (i < l - 1){b.append(File.separatorChar);}}return b.toString();}
Name);return this;}
public void setProgressMonitor(ProgressMonitor pm, int max) {
public void reset(String filename) {if (!first()) {ptr = 0;if (!eof())parseEntry();}}
public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new NoSuchElementException();}
public String getNewSuffix() {return this.newSuffix;}
public int indexOfValue(int value) {for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;}
terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}
public static GetGatewayResponsesResult executeGetGatewayResponses(GetGatewayResponsesRequest request) {
public void setPosition(long pos) {currentBlockIndex = (int) (pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int) (pos & blockMask);}
public int read() {int c = read(0);if (c == -1) throw new RuntimeException("Read past end of file.");return c;}
public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig, String version) {setBootstrapActionConfig(bootstrapActionConfig);setVersion(version);}
_7_padding!= null) {out.writeByte(field_7_padding.intValue());}}
public int lastIndexOf(String string, int start) {
public boolean add(E object, int index) {return addImpl(object, index);}
public ConfigSnapshot unsetSection(ConfigSnapshot src, String section, String subsection) {
public final String getTagName(String ns) {return ns+":"+tagName;}
public void addSubRecord(SubRecord element) {subrecords.add(element);}
public boolean removeAll(Collection c) {synchronized (mutex) {return delegate().removeAll(c);}}
public DoubleMetaphoneFilter create(TokenStream input, int maxCodeLength, boolean inject) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}
public long inCoreLength() {
public void setValue(int newValue) {value = newValue;}
= newName;}
public int get(int i, int j) {if (count <= i || count <= j)throw new ArrayIndexOutOfBoundsException(i,j);return entries[i][j];}
("Content-Type", "application/json");setRequestBody("{\"repo_name\":\""+repoName+"\"}");}
public void setDeltaBaseAsOffset(boolean deltaBaseAsOffset) {this.deltaBaseAsOffset = deltaBaseAsOffset;}
ificationException();}}
public static MergeShardsResult executeMergeShards(MergeShardsRequest request) {
public static AllocateHostedConnectionResult executeAllocateHostedConnection(AllocateHostedConnectionRequest request) {
public int getEndIndex() {return end;}
public static final WeightedTerm[] getTerms(Query query, boolean sort){
public ByteBuffer compact(int start, int end) {throw new ReadOnlyBufferException();}
] = byte2 & 63;}}
public String getPath() throws IllegalArgumentException {String s = getHost();if (s == null) throw new IllegalArgumentException();return s;}
public static DescribeNotebookInstanceLifecycleConfigResult executeDescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {
public String getAccessKeyID() {return this.accessKeyID;}
VpnConnection(request, asyncHandler);}
public static DescribeVoicesResult executeDescribeVoices(DescribeVoicesRequest request) {
public ListMonitoringExecutionsResult executeListMonitoringExecutions(ListMonitoringExecutionsRequest request) {
2);setJobId2(jobId2);}
public EscherRecord getEscherRecord(int index, int offset){return escherRecords.get(index).getEscherRecord(offset);}
public GetApisResult executeGetApis(GetApisRequest request) {
public static DeleteSmsChannelResult executeDeleteSmsChannel(DeleteSmsChannelRequest request) {
public void setTrackingRefUpdate(TrackingRefUpdate trackingRefUpdate) {this.trackingRefUpdate = trackingRefUpdate;}
public void print(char c) {print(String.valueOf(c));}
public QueryNode getChild(int i) {return getChildren().get(i);}
public boolean accept(File file) {
public AreaRecord(short formatFlags) {field_1_formatFlags            = formatFlags;}
public GetThumbnailRequest(String photoId) {super("CloudPhoto", "2017-07-11", "GetThumbnail", "cloudphoto");setPhotoId(photoId);setProtocol(ProtocolType.HTTPS);}
public static DescribeTransitGatewayVpcAttachmentsResult executeDescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {
public PutVoiceConnectorStreamingConfigurationResult executePutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {
public OrdRange getOrdRange(String dim, String prefix) {
}
public E peekFirst() {return peekFirstImpl();}
public static CreateWorkspacesResult executeCreateWorkspaces(CreateWorkspacesRequest createWorkspacesRequest) {
public NumberFormatIndexRecord copy() {
